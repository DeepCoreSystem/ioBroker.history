{
    "common": {
        "name":                     "history",
        "title":                    "History",
        "desc":                     {
            "en": "Logging of state history",
            "de": "Loggt die Historie von einzelnen Zuständen",
            "ru": "Сохранять историю событий для отдельных состояний"
        },
        "version":                  "1.5.1",
        "news": {
            "1.5.1": {
                "en": "Fix handling of float values in Adapter config and Datapoint config.",
                "de": "Fehlerbehebung bei der Eingabe von Zahlen mit Kommastellen in der Adapter- und Datenpunk-Konfiguration.",
                "ru": "Fix handling of float values in Adapter config and Datapoint config."
            },
            "1.5.0": {
                "en": "Add messages enableHistory/disableHistory/getEnabledDPs, add support to log changes only if value differs a minimum value for numbers. Fixing aggregate calculation",
                "de": "Messages enableHistory/disableHistory/getEnabledDPs hinzugefügt, Unterstützung zum Loggen wenn der Zahlenwert um einen Mindestwert abweicht. Fehler in Aggregationsberechnung behoben",
                "ru": "Add messages enableHistory/disableHistory/getEnabledDPs, add support to log changes only if value differs a minimum value for numbers. Fixing aggregate calculation"
            },
            "1.4.1": {
                "en": "Fix Retentiuon handling, Optimize Converter script, add storeState message",
                "de": "Fehler bei Automatischer Lösung behoben, Daten-Konvertierungsskript optimiert, storeState Funktion hinzugefügt",
                "ru": "Fix Retentiuon handling, Optimize Converter script, add storeState message"
            },
            "1.4.0": {
                "en": "add option to re-log unchanged values to make it easier for visualization",
                "de": "Neue Option hinzugefügt um nicht-geänderte Werte in definierten Abständen zu loggen um Visualisierungen einfacher zu machen.",
                "ru": "add option to re-log unchanged values to make it easier for visualization"
            },
            "1.3.1": {
                "en": "Fixed: ts is assigned as val",
                "de": "Korrigiert: ts war als val benutzt",
                "ru": "Исправлено: ts использовался вместо val"
            },
            "1.3.0": {
                "en": "Compatible only with new admin",
                "de": "Nur mit neuem Admin kompatibel",
                "ru": "Совместимо только с новым админ-драйвером"
            },
            "1.2.0": {
                "en": "change name of object from history to custom",
                "de": "Ändere Name vom Storage-Object von history nach custom",
                "ru": "Изменено имя объекта для настроек с history на custom"
            },
            "1.1.0": {
                "en": "fix aggregation of last point\naggregation none just deliver the raw data without any aggregation",
                "de": "Geändert die Aggregation vom letzten Punkt\nAggregation none liefert nur raw Daten",
                "ru": "Изменено вычисление последней точки\nТип агрегации none возвращяет только реальные значения"
            },
            "1.0.5": {
                "en": "fix aggregation on large intervals",
                "de": "fix aggregation on large intervals",
                "ru": "fix aggregation on large intervals"
            },
            "1.0.4": {
                "en": "fix aggregation on seconds",
                "de": "fix aggregation on seconds",
                "ru": "fix aggregation on seconds"
            },
            "1.0.3": {
                "en": "draw line to the end if ignore null",
                "de": "draw line to the end if ignore null",
                "ru": "draw line to the end if ignore null"
            },"1.0.2": {
                "en": "switch max and min with each other",
                "de": "switch max and min with each other",
                "ru": "switch max and min with each other"
            },
            "1.0.1": {
                "en": "calculate end/start values for on change too",
                "de": "calculate end/start values for on change too",
                "ru": "calculate end/start values for on change too"
            },
            "1.0.0": {
                "en": "change default aggregation name",
                "de": "change default aggregation name",
                "ru": "change default aggregation name"
            }
        },
        "mode":                     "daemon",
        "platform":                 "Javascript/Node.js",
        "loglevel":                 "info",
        "messagebox":               true,
        "subscribe":                "messagebox",
        "keywords":                 ["charts", "history", "logging", "graphs", "Graphen", "data", "archive"],
        "main":                     "history.js",
        "enabled":                  true,
        "preserveSettings":         "custom",
        "authors": [
            "bluefox <dogafox@gmail.com>", "hobbyquaker <hq@ccu.io>"
        ],
        "license":                  "MIT",
        "readme":                   "https://github.com/ioBroker/ioBroker.history/blob/master/README.md",
        "icon":                     "history.png",
        "extIcon":                  "https://raw.githubusercontent.com/ioBroker/ioBroker.history/master/admin/history.png",
		"type":                     "storage",
        "supportCustoms":           true,
        "getHistory":           	true,
		"dependencies":             [{"js-controller": ">=0.12.0","admin": ">=1.6.10"}],
        "stopTimeout":              10000
    },
    "native": {
        "maxLength": 960,
        "limit":     2000,
        "storeDir":  "",
        "debounce":  10000,
        "retention": 31536000,
        "storeFrom": false,
        "storeAck":  true,
        "changesRelogInterval":      0,
        "changesMinDelta": 0
    },
    "objects": [
        {
            "_id": "_design/custom",
            "language": "javascript",
            "views": {
                "state": {
                    "map": "function(doc) { if (doc.type==='state' && (doc.common.custom || doc.common.history)) emit(doc._id, doc.common.custom || doc.common.history) }"
                }
            }
        }
    ]
}
